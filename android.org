* Android

** Emulator
http://developer.android.com/guide/developing/devices/emulator.html

Check the port number on the title
> telnet localhost [port]

*** commands
- Change network speed to EDGE
network speed edge
- Change network speed to full
network speed full
- Set battery capacity
power capacity [value]
- Disconnect battery charger
power status not-charging
- Send SMS
sms send [number] "[text]"

*** Communicate two emulators
- Make one emulator call the other: dial the port number

** Dalvik Debug Monitor Service: DDMS
*** File explorer
*** Logcat
*** Traceview
*** Hierarchyview
** Components
*** Activity
User interface
*** Service
Long running, UI-less processes
Interaction with remote processes
*** Broadcast Subscriber
Receives and reacts upon external or internal events.
Subscriber in publish/subscribe pattern.
Events are represented by the Intent class.
BroadcastReceiver receives and responds to broadcast events.
*** Content providers
Store and share data across applications
Uses database-style interface
Handles interprocess communication
** Building
http://developer.android.com/guide/developing/building
*** Define resources
http://developer.android.com/guide/topics/resources
Strings: strings, string arrays, plurals.
Typically stored in res/values-[country code]/*.xml
Accessed by other resources as @string/string_name
Accessed in Java as
R.string.string_name
*** Implement application classes
**** User Interface layout

Defined in XML files: res/layout/*.xml
Accessed in Java as: R.layout.layout_name
Accessed by other resources as: @layout/layout_name
The application can change the layout depending on the screen size or even the orientation: res/layout-land/main.xml

**** R.java
Generated at compile time from the resources.

**** onCreate() workflow
- Restore saved state:

#+BEGIN_SRC java
super.onCreate(savedInstanceState)
#+END_SRC

If we don't call super.onCreate(), it will raise an error.
- set content view

#+BEGIN_SRC java
setContentView(R.layout.main);
#+END_SRC

- initialize UI elements

#+BEGIN_SRC java
(EditText) findViewById(R.id.XX);
#+END_SRC

- Link UI elements to code actions

#+BEGIN_SRC java
button.setOnClickListener(new Button.OnClickListener() {
    public void onClick(View v) { ... } };
#+END_SRC

*** Package application

System packages application components and resources into a .apk file.
Developers specify required application information in a file classed AndroidManifest.xml

**** [[http://developer.android.com/guide/topics/manifest/manifest-intro.html][AndroidManifest.xml]]

Description file that must exist in the root folder of the application.

- Application name
- Components
- Other: required permissions, application features, minimun API level

*** Install and run application

Using emulators or physical devices.

[[http://developer.android.com/tools/publishing/app-signing.html][Sign the application]]

Install the application using

#+BEGIN_SRC sh
adb install
#+END_SRC

** Components

*** Activities

Provides a visual interface for user interaction

By convention, each activity typically supports one focused thing a user can do, and applications often comprise several activities.

Android supports navigation in several ways: tasks, the task backstack, suspending and resuming activities.

**** 
